import Head from 'next/head'
import { useRef, useEffect, useState } from 'react'

export default function Home() {
  const inputRef = useRef(undefined);
  const canvasRef = useRef(undefined);

  const [picture, setPicture] = useState('');
  const [animated, setAnimated] = useState(false);
  const [cnv, setCnv] = useState()

  let canvas, context, image, particlesArray = [], numberOfParticles = 5000, mappedImage=[];


  useEffect(() => {
   
    canvas = document.getElementById("canvas");
    context = canvas.getContext('2d');
    canvas.width = 600;
    canvas.height = 600;
    
    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = 0;
        this.speed = 0;
        this.velocity = Math.random() * 0.5;
        this.size = Math.random() * 1.5 + 1;
      }
  
      update() {
        this.y += this.velocity;
        if ( this.y >= canvas.height){
          this.y = 0;
          this.x = Math.random() * canvas.width;
        }
      }
  
      draw(){
        context.beginPath();
        context.fillStyle = 'white';
        context.arch(this.x, this.y, this.size, 0, Math.PI *2);
        context.fill();
  
      }
    }
    initialize(Particle);
    animate(canvas, context)
  }, []);
  


  const initialize = (particle) => {
    for(let i= 0; i < numberOfParticles; i++){
      particlesArray.push(new particle)
    }
  }
 
  
  const animate = (canvas, context) => {
    console.log('context', context)
    context.globalAlha = 0.05;
    context.fillStyle= 'rgb(0, 0, 0)';
    context.fillRect(0,0, canvas.width, canvas.height);
    for(let i = 0; i < particlesArray; i++){
      particlesArray[i].update();
      particlesArray[i].draw();
    }
    console.log(particlesArray)
    requestAnimationFrame(animate);
  }
 
   
  return (
    <div>
      <Head>
        <title>Pixel Manipulation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://res.cloudinary.com/dogjmmett/image/upload/v1663141936/Screenshot_2022-09-14_at_10.46.09-removebg-preview_mppyea.png" />
      </Head>
      <nav>cscscscs</nav><br/>
        {/* <input ref={inputRef} type="file" hidden onChange={animationHandler} /> */}
        {/* <button onClick={() => {inputRef.current.click()}}>click</button> */}
          <canvas id="canvas" ref={canvasRef}></canvas> 
    </div>
  )
}
